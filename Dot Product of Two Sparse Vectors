class SparseVector:
    def __init__(self, nums: List[int]):
        self.vector = {}
        for i, no in enumerate(nums):
            if no!=0:
                self.vector[i]=no

    # Return the dotProduct of two sparse vectors
    def dotProduct(self, vec: 'SparseVector') -> int:
        ans = 0
        for idx, val in self.vector.items():
            if idx in vec.vector.keys():
                ans +=val*vec.vector[idx]
        return ans


# Your SparseVector object will be instantiated and called as such:
# v1 = SparseVector(nums1)
# v2 = SparseVector(nums2)
# ans = v1.dotProduct(v2)
