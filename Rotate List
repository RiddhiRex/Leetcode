# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        
        cur = head
        cnt = 0
        while(cur is not None):
            cur = cur.next
            cnt+=1
            
        k = k%cnt
        if k==0:
            return head
        
        new_end = cnt-k-1
        i=0
        cur = head
        while(i<new_end):
            cur=cur.next
            i+=1

        new_head = cur.next
        cur.next = None
        cur = new_head
        while(cur.next is not None):
            cur = cur.next
        cur.next = head
        return new_head
        

